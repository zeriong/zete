openapi: 3.0.0
paths:
  /user/all:
    get:
      operationId: getAll
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
      tags:
        - User
  /user/register:
    post:
      operationId: createAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - User
  /user/modify:
    patch:
      operationId: profileUpdate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - User
  /user/profile:
    get:
      operationId: profile
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      tags:
        - User
  "/user/{id}":
    delete:
      operationId: delete
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - User
  /user/testApi:
    post:
      operationId: testApi
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - User
  /auth/login:
    post:
      operationId: login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginOutput"
      tags:
        - Auth
  /auth/refresh:
    get:
      operationId: refreshToken
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenOutput"
      tags:
        - Auth
  /auth/logout:
    get:
      operationId: logout
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - Auth
  /memo/sendContentData:
    post:
      operationId: getAsideData
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AsideDataOutput"
      tags:
        - Memo
  /memo/createCate:
    post:
      operationId: createCate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCateInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCateOutput"
      tags:
        - Memo
  /memo/updateOneCate:
    post:
      operationId: updateCategory
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CateInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreOutput"
      tags:
        - Memo
  /memo:
    delete:
      operationId: deleteCate
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CateIdInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportantMemoLengthOutput"
      tags:
        - Memo
  /memo/get:
    patch:
      operationId: get
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMemosInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMemosOutput"
      tags:
        - Memo
  /memo/create:
    post:
      operationId: create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMemoInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMemoOutput"
      tags:
        - Memo
  /memo/changeImportant:
    post:
      operationId: changeImportant
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemoIdInput"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportantMemoLengthOutput"
      tags:
        - Memo
  /openAi/createCompletion:
    post:
      operationId: createCompletion
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompletionInputDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Promise"
      tags:
        - OpenAi
info:
  title: My API
  description: An API to do awesome things
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    Tags:
      type: object
      properties:
        id:
          type: number
        tagName:
          type: string
        userId:
          type: number
        memoId:
          type: number
        cateId:
          type: number
      required:
        - id
        - tagName
        - userId
        - memoId
        - cateId
    Memos:
      type: object
      properties:
        id:
          type: number
        createAt:
          format: date-time
          type: string
        updateAt:
          format: date-time
          type: string
        title:
          type: string
        content:
          type: string
        important:
          type: boolean
        userId:
          type: number
        cateId:
          type: number
          nullable: true
        tag:
          type: array
          items:
            $ref: "#/components/schemas/Tags"
      required:
        - id
        - createAt
        - updateAt
        - important
        - userId
        - cateId
        - tag
    Categories:
      type: object
      properties:
        id:
          type: number
        cateName:
          type: string
          nullable: true
        userId:
          type: number
        memo:
          type: array
          items:
            $ref: "#/components/schemas/Memos"
        tag:
          type: array
          items:
            $ref: "#/components/schemas/Tags"
      required:
        - id
        - cateName
        - userId
        - memo
        - tag
    User:
      type: object
      properties:
        id:
          type: number
        createAt:
          format: date-time
          type: string
        updateAt:
          format: date-time
          type: string
        email:
          type: string
        password:
          type: string
        name:
          type: string
        mobile:
          type: string
        refreshToken:
          type: string
        cate:
          type: array
          items:
            $ref: "#/components/schemas/Categories"
        memos:
          type: array
          items:
            $ref: "#/components/schemas/Memos"
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Tags"
      required:
        - id
        - createAt
        - updateAt
        - email
        - password
        - name
        - mobile
        - cate
        - memos
        - tags
    CreateAccountDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        mobile:
          type: string
      required:
        - email
        - password
        - name
        - mobile
    CoreOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
      required:
        - success
    UpdateAccountDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        mobile:
          type: string
      required:
        - email
        - name
        - mobile
    LoginInput:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    LoginOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        user:
          $ref: "#/components/schemas/User"
        accessToken:
          type: string
      required:
        - success
    AccessTokenOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        accessToken:
          type: string
      required:
        - success
    CategoriesAndMemoCount:
      type: object
      properties:
        id:
          type: number
        cateName:
          type: string
          nullable: true
        userId:
          type: number
        memo:
          type: array
          items:
            $ref: "#/components/schemas/Memos"
        tag:
          type: array
          items:
            $ref: "#/components/schemas/Tags"
        memoCount:
          type: number
      required:
        - id
        - cateName
        - userId
        - memo
        - tag
    AsideData:
      type: object
      properties:
        memosCount:
          type: number
        importantMemoCount:
          type: number
        cateCount:
          type: number
        cate:
          type: array
          items:
            $ref: "#/components/schemas/CategoriesAndMemoCount"
      required:
        - memosCount
        - importantMemoCount
        - cateCount
        - cate
    AsideDataOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        asideData:
          $ref: "#/components/schemas/AsideData"
      required:
        - success
        - asideData
    CreateCateInput:
      type: object
      properties:
        cateName:
          type: string
      required:
        - cateName
    CreateCateOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        savedCate:
          $ref: "#/components/schemas/Categories"
      required:
        - success
        - savedCate
    CateInput:
      type: object
      properties:
        cateId:
          type: number
        cateName:
          type: string
      required:
        - cateId
        - cateName
    CateIdInput:
      type: object
      properties:
        cateId:
          type: number
          nullable: true
      required:
        - cateId
    ImportantMemoLengthOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        importantMemoCount:
          type: number
      required:
        - success
    GetMemosInput:
      type: object
      properties:
        search:
          type: string
          nullable: true
        offset:
          type: number
          default: 0
        limit:
          type: number
          default: 15
        cateQueryStr:
          type: number
          nullable: true
        tagQueryStr:
          type: string
          nullable: true
        menuQueryStr:
          type: string
          nullable: true
      required:
        - search
        - offset
        - limit
        - cateQueryStr
        - tagQueryStr
        - menuQueryStr
    GetMemosOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        memos:
          type: array
          items:
            $ref: "#/components/schemas/Memos"
        memosCount:
          type: number
        importantMemoCount:
          type: number
        cate:
          type: array
          items:
            $ref: "#/components/schemas/CategoriesAndMemoCount"
      required:
        - success
        - memos
        - memosCount
        - importantMemoCount
        - cate
    TagNameInput:
      type: object
      properties:
        tagName:
          type: string
      required:
        - tagName
    CreateMemoInput:
      type: object
      properties:
        cateId:
          type: number
          nullable: true
        title:
          type: string
        content:
          type: string
        important:
          type: boolean
        tags:
          type: array
          items:
            $ref: "#/components/schemas/TagNameInput"
      required:
        - cateId
        - title
        - content
        - important
    CreateMemoOutput:
      type: object
      properties:
        error:
          type: string
        target:
          type: string
        message:
          type: string
        success:
          type: boolean
        savedMemo:
          $ref: "#/components/schemas/Memos"
      required:
        - success
        - savedMemo
    MemoIdInput:
      type: object
      properties:
        memoId:
          type: number
      required:
        - memoId
    CreateCompletionInputObj:
      type: object
      properties:
        role:
          type: string
        content:
          type: string
      required:
        - role
        - content
    CreateCompletionInputDto:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CreateCompletionInputObj"
      required:
        - data
    Promise:
      type: object
      properties: {}
